name: Build
on:
  push:
    branches:
      - '*'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build Spring Boot
        run: |
          cd springapp
          mvn clean compile -DskipTests
          echo "✅ Spring Boot build completed"
      - name: Create root pom for Sonar
        run: |
          cat > pom.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
              <modelVersion>4.0.0</modelVersion>
              <groupId>com.houari</groupId>
              <artifactId>iamneo-production_0b6d58ad-b187-431b-a5e1-0eb2a40b59fb-4a743646-990e-42f7-8c60-f0d5127a7a0d</artifactId>
              <version>1.0-SNAPSHOT</version>
              <properties>
                  <maven.compiler.source>21</maven.compiler.source>
                  <maven.compiler.target>21</maven.compiler.target>
                  <sonar.organization>iamneo-production</sonar.organization>
                  <sonar.host.url>https://sonar.server.examly.io</sonar.host.url>
                  <sonar.sources>springapp/src/main/java</sonar.sources>
                  <sonar.java.binaries>springapp/target/classes</sonar.java.binaries>
              </properties>
              <dependencies>
                  <dependency>
                      <groupId>org.junit.jupiter</groupId>
                      <artifactId>junit-jupiter-api</artifactId>
                      <version>5.7.0</version>
                      <scope>test</scope>
                  </dependency>
              </dependencies>
              <build>
                  <pluginManagement>
                      <plugins>
                          <plugin>
                              <groupId>org.sonarsource.scanner.maven</groupId>
                              <artifactId>sonar-maven-plugin</artifactId>
                              <version>3.7.0.1746</version>
                          </plugin>
                      </plugins>
                  </pluginManagement>
              </build>
          </project>
          EOF
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ -n "${{ secrets.SONAR_TOKEN }}" ]; then
            echo "Running Sonar analysis..."
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dsonar.projectKey=iamneo-production_0b6d58ad-b187-431b-a5e1-0eb2a40b59fb-4a743646-990e-42f7-8c60-f0d5127a7a0d \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }} || echo "Sonar analysis failed, continuing..."
          else
            echo "SONAR_TOKEN not set, skipping Sonar analysis"
          fi
          echo "✅ Build and analysis completed"
      - name: Trigger API
        if: always()
        run: |
          if [ -n "${{ secrets.API_URL }}" ] && [ -n "${{ secrets.API_SECRET }}" ]; then
            REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d '/' -f 2)
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            echo "Triggering API for repo: $REPO_NAME, branch: $BRANCH_NAME"
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"repo_id\":\"$REPO_NAME\",\"branch_name\":\"$BRANCH_NAME\",\"api_secret\":\"${{ secrets.API_SECRET }}\"}"\
              "${{ secrets.API_URL }}" || echo "API trigger failed, continuing..."
          else
            echo "API credentials not set, skipping API trigger"
          fi
          echo "✅ Workflow completed successfully"